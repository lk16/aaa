name: Python package

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install poetry
      uses: snok/install-poetry@v1.3.0
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    - name: Load cached pre-commit env
      id: cached-pre-commit-dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ runner.os }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
    - name: Run linters
      run:
        poetry add pre-commit &&
        poetry run pre-commit run --all-files
    - name: Run Python tests
      run: |
        poetry install
        export AAA_STDLIB_PATH=$(pwd)/stdlib
        poetry run pytest --color=yes --cov=aaa --cov-report=term-missing -x -vv
    - name: Run Rust tests
      run : |
        export AAA_STDLIB_PATH=$(pwd)/stdlib
        poetry run ./manage.py test stdlib/ --compile --binary /tmp/aaa_stdlib_tests
        /tmp/aaa_stdlib_tests
