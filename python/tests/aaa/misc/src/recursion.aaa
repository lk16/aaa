
struct S {
    a as vec[S]
}

enum Json {
    null,
    boolean as bool,
    integer as int,
    string as str,
    array as vec[Json],
    object as map[str, Json]
}


fn main {
    S
    dup "a" {
        vec[S]
        dup S vec:push
    } !
    .
    "\n" .

    Json:null
    .
    "\n" .

    vec[Json]
    dup 5 Json:integer vec:push
    Json:array
    .
    "\n" .

    map[str, Json]
    dup "key" false Json:boolean map:set
    Json:object
    .
    "\n" .
}
