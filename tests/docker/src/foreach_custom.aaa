fn range args start as int, end as int return range_iter {
    range_iter
    dup "end" { end } !
    dup "next" { start } !
}

struct range_iter {
    end as int,
    next as int,
}

fn range_iter:iter args r as range_iter return range_iter {
    r
}

fn range_iter:next args r as range_iter return int, bool {
    if
        r "next" ?
        r "end" ?
        >=
    {
        0 false
    } else {
        r "next" ? true
        r "next" { r "next" ? 1 + } !
    }
}

fn main {
    1 5 range
    foreach {
        .
        "\n" .
    }
}
