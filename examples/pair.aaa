// TODO move to tests

struct Pair[A, B] {
    a as A,
    b as B,
}

fn make_pair[A, B] args a as A, b as B return Pair[A, B] {
    Pair[A, B]
    dup "a" { a } !
    dup "b" { b } !
}

fn Pair[A, B]:print args pair as Pair[A, B] {
    pair .
    "\n" .

    "a = " .
    pair "a" ? .
    "\n" .

    "b = " .
    pair "b" ? .
    "\n" .
}

fn main {
    69 "hello" make_pair

    use pair {
        pair Pair:print
        pair "a" ? 69 = assert
        pair "b" ? "hello" str:equals assert

        "\n" .

        pair "a" { 420 } !
        pair "b" { "world" } !

        pair Pair:print
    }
}

// TODO add updating fields

// TODO add recursive example
