
fn run_process args input as str {
    if input "" str:equals not {

        input " " str:split dup 0 vec:get swap
        environ
        execve

        // This is unreachable if execve succeeds
        drop
        "Command failed\n" .

        1 exit
    }
}


fn main {
    while true {
        "> " .
        0 1024 read drop str:strip

        if dup "exit" str:equals {
            0 exit
        }

        fork
        if dup 0 = {
            // child
            drop
            run_process

        } else {
            // parent
            swap drop
            0 waitpid drop drop drop drop
        }
    }
}
