from "http.request" import Request
from "http.response" import make_internal_server_error_response, make_response, Response
from "http.router" import Router,
from "http.server" import
    make_web_server,
    RequestHandler,
    WebServer,
    WebServerExitStatus

fn hello_world_endpoint args request as Request return Response {
    make_response
    dup 200 Response:set_status_code
    dup "{\"message\": \"Hello world!\"}\n" Response:set_json_body
}

fn internal_server_error_endpoint args request as Request return Response {
    make_internal_server_error_response
}

fn bad_request_endpoint args request as Request return Response {
    make_response
    dup 400 Response:set_status_code
    dup "Bad Request\n" Response:set_body
}

fn main return int {
    Router

    use root_router {
        root_router "GET" "/" "hello_world_endpoint" fn Router:add_endpoint
        root_router "GET" "/hello" "hello_world_endpoint" fn Router:add_endpoint

        Router
        use statuses_router {
            statuses_router "GET" "/error" "internal_server_error_endpoint" fn Router:add_endpoint
            statuses_router "GET" "/bad-request" "bad_request_endpoint" fn Router:add_endpoint

            root_router "/statuses" statuses_router Router:add_router
        }

        root_router RequestHandler:router
    }

    use request_handler {
        "0.0.0.0" 8080 request_handler make_web_server
    }

    WebServer:run
    use exit_status {
        exit_status
        match {
            case WebServerExitStatus:ok {
                0
            }
            default {
                exit_status WebServerExitStatus:to_str .
                "\n" .
                1
            }
        }
    }
}
