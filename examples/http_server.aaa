
fn main {
    2  // AF_INET
    1  // SOCK_STREAM
    0  // protocol
    socket
    if not dup {
        "socket failed\n" .
        1 exit
    }
    drop

    dup  // file descriptor
    "0.0.0.0"
    8080
    bind

    if not dup {
        "bind failed\n" .
        1 exit
    }
    drop

    dup  // file descriptor
    5    // backlog
    listen

    if not dup {
        "listen failed\n" .
        1 exit
    }
    drop

    while true {
        dup // file descriptor
        accept

        if not dup {
            "accept failed\n" .
            1 exit
        }
        drop

        // client fd (pushed by accept) is popped by write

        // build response literal
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: application/json\r\n"
        "Content-Length: 27\r\n"
        "\r\n"
        "{\"message\": \"Hello world!\"}"

        str:append swap drop
        str:append swap drop
        str:append swap drop
        str:append swap drop

        write

        if not dup {
            "write failed\n" .
            1 exit
        }
        drop  // write ok-value
        drop  // write byte count

        drop  // client port
        drop  // client ip
    }

    drop
}
