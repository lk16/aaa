// used to create socket for IPv4 connections
fn AF_INET return int {
    2
}

// used to create TCP connections
fn SOCK_STREAM return int {
    1
}

fn make_http_socket return int, bool {
    AF_INET SOCK_STREAM 0 socket
}

fn raw_http_response return str {
    "HTTP/1.1 200 OK\r\n"
    "Content-Type: application/json\r\n" str:append
    "Content-Length: 28\r\n" str:append
    "\r\n" str:append
    "{\"message\": \"Hello world!\"}\n" str:append
}

fn main return int {
    make_http_socket
    use fd, socket_ok {
        if socket_ok not {
            "socket failed\n" .
            1 return
        }

        fd "0.0.0.0" 8080 bind
        use bind_ok {
            if bind_ok not {
                "bind failed\n" .
                1 return
            }
        }

        fd 5 listen
        use listen_ok {
            if listen_ok not {
                "listen failed\n" .
                1 return
            }
        }

        while true {
            fd accept
            use client_ip, client_port, response_fd, accept_ok {
                if accept_ok not {
                    "accept ok\n" .
                    1 return
                }

                response_fd raw_http_response write
                use written_bytes, write_ok {
                    if write_ok not {
                        "write failed\n" .
                        1 return
                    }
                }

                "Sent response to: " .
                client_ip .
                ":" .
                client_port .
                "\n" .
            }
        }
    }
}
